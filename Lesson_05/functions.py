"""

Функция -это именнованный блок кода, который выполняет определенные действия
1. Определение функции - описание того, что делает функция
2. Вызов функции - команда, которая заставляет функцию выполнить свою работу (код, который относится к этой функции)

def - это ключевое слово, с которого начинается определение функции
После def  указывается имя функции и круглые скобки
потом ставится двоеточие
с новой строки идет тело функции
"""

"""
Компоненты функции:
1. Имя функции
2. Тело функции (блок кода, который выполниться при вызове)
3. Параметры (данные, которые функция принимает/ может принимать для выполнения задачи)
4. Возвращаемое значение (результат, который функция может вернуть)
"""


# Определение функции
def greet():
    # Тело функции: блок кода выполняется при вызове функции
    print("Привет студент")
    print("Добро пожаловать!")


# Вызываем функцию
greet()  # Выполняется код, написанный в теле функции с именем greet

print()


# Параметры функции
# Функция с параметрами

# Параметры - данные, которые функция принимает при вызове
# Внутри функции параметры становятся локальными переменными
def greet_user(name):
    print("Привет", name, "!")


print("Этот код не принадлежит функции")

# Вызов функции с передачей аргументов
greet_user("Анна")

# Параметр - это переменные, прописанные в определении функции (name в примере)
# Аргументы - фактические значения, которые передаются при вызове функции ("Анна" в примере)

print("Привет, мир!")
print("Hello. Word!")


# ФУНКЦИЯ МОЖЕТ ИМЕТЬ НЕСКОЛЬКО ПАРАМЕТРОВ
def add_numbers(a, b):
    print("a", a)
    print("b", b)
    print("Сумма: ", a + b)  # Вывод сумма 8
    print()


add_numbers(3, 5)  # Вывод Сумма: 8
add_numbers(1, 9)  # Вывод Сумма: 10
add_numbers(20, 10)  # Вывод Сумма: 30

add_numbers("Hello", "Python")
print("===================================")


# Возвращаемое значение
# Функции могут возвращать результат с помощью ключевого слова return
# Это значение можно сохранить в переменную

# return - ключевое слово, с помощью которого функция возвращает результат
# Когда Python встречает return выполнение тела функции прекращается и значение,
# указанное после return, передается туда, где функция была вызвана


# Функция с возвращаемым значением
def add(a, b):
    return a + b


# сохранить результат работы функции в переменую
result = add(3, 5)
print("Сумма: ", result)

print("================================")


# Функция может вернуть значение любого тип данных: число, строку и т.д.
# Функция без возвращаемого значения

# Передача аргументов в виде переменных
def add_numbers2(a, b):
    # a = a + 5
    print("Сумма:", a + b)


# При вызове функции вместо конкретных значений (чисел/строк) можно передать переменные
# При вызове функции значения переменных x и y будут скопированы в переменные a и b
x = 10
y = 15
add_numbers2(x, y)
print("x", x)
print("=============================================")

# Область видимости переменных
"""
1. Локальные переменные
Параметры и переменные, объявленные внутри функции, доступны (видны) только внутри этой функции

2. Глобальные переменные
Переменные, объявленные вне функции, доступны внутри функции
"""


def gree():
    message = "Привет!"
    print(message)


gree()
# print(message)  # ошибка, переменная message недоступна вне функции (локальная переменная функции gree)
# print(a + b)    # ошибка, переменные a, b недоступны - они являются параметрами функции dd_numbers2()

name = "Анна"

def greet_name():
    print(name)

greet_name()