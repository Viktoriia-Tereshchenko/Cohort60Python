# Список (list) - это упорядоченная коллекция (набор) элементов,
# которая позволяет хранить несколько значений в одной переменной

# Создание пустого списка
empty_list = []

# Список чисел - явная инициализация списка
numbers = [1, 2, 3, 4, 5]

# Список строк
names = ["Анна", "Борис", "Виктор"]

# Список разных типов данных
mixed_list = [1, "текст", 3.14, True]

# Список можно изменять: добавлять, удалять, изменять значения в списке

# print умеет выводить в консоль все значения списка
print(numbers)
print(mixed_list)

# Доступ к элементам списка по индексу
print(numbers[0])
temp = numbers[4]  # Можно сохранить значение в переменную
print(temp + 1)

# Изменение значения элемента списка
numbers[1] = 99  # меняю значение во второй ячейке (ячейке с индексом 1)
print(numbers)

print("\n==============FOR===============\n")

# Цикл for


# Перебрать все элементы списка
fruits = ["Apple", "Banana", "Kiwi", "Cherry"]
for fruit in fruits:
    # Тело цикла
    print("Я люблю", fruit)

print("\n--------------------------------\n")

# Классическое применение цикла for - Перебор чисел в заданном диапазоне с заданным шагом.
# Ввести на экран числа от 0 до 5 включительно
i = 0
while i <= 5:
    print(i)
    i += 1

print("\n--------------------------------\n")

# перебрать значения
# range(5) - от 0 (включительно) до 5 (не включительно)
# range(5 + 1) - от 0 (включительно) до 5 (включительно)
for i in range(5 + 1):
    print(i)

print("\n--------------------------------\n")

# Перебор списка по индексам
numbers = [5, 10, 15, 20, 35, 45, 50, 100]
# Длина списка - количество элементов в списке (кол-во ячеек)
length = len(numbers)  # Сохранение длины списка numbers в переменную length
print("Длина списка:", length)

# Вывести в консоль самый правый элемент - элемент с max-индексом
# По этой формуле (длина минус 1) всегда получим максимальный индекс
print(numbers[length - 1])
print(numbers[len(numbers) - 1])


#Перебор всех индексов списка
for i in range(len(numbers)):
    #number = number[i]
    print(f"Индекс {i}: значение = {numbers[i]}")


print("============= A : B ==============")

# Перебор значений от A до B. Второе значение в параметрах НЕ включительно
for i in range(1, 11):  # перебор значений от 1 до 10 с шагом 1
    print(i)


print("========in range(0, 10, 2)==========")
# Перебор значений от A до B с указанным шагом
for j in range(0, 10, 2): # перебор чисел от 0 до 10 с шагом 2
    print(j)
"""
1. j = 0
2. j < 10 -> 0 < 10 - True
3. Один раз выполняет тело цикла
4. j += третий_параметр (если есть). Если его нет -> j += 1
5. j < 10 -> 2 < 10 - True
.....
"""



print("========while i < 10=========")
i = 0
while i < 10:
    print(i)
    i += 2

print("\n--------------------------------\n")
"""
1. k = первый_параметр -> k = 10
2. k < второй_параметр -> 10 < 10
3. Так как условие выдало False - тело цикла не выполняется. Выходим из цикла
"""
for k in range(10, 10, 5): # перебор чисел от 0 до 10 с шагом 2
    print(k)


# break , continue
# break - позволяет прервать выполнение текущей итерации и цикла
# continue - позволяет прервать текущую итерацию и перейти к следующей

for num in range(1, 6):
    if num == 3:
        print("Нашел тройку! Останавливаем цикл")
        break #После выполнения оператора break - выход из цикла
    print(num)
print("Продолжение кода\n")

for num in range(1, 6):
    if num == 3:
        print("Пропускаем 3")
        continue #После выполнения оператора continue - переходим к следующей итерации: увеличиваем счетчик на шаг цикла и проверяем условие выхода
    print(num)
print("Продолжение кода 2\n")